-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DB_SOCIAL_PORTAL
-- -----------------------------------------------------
-- Social portal database
DROP SCHEMA IF EXISTS `DB_SOCIAL_PORTAL` ;

-- -----------------------------------------------------
-- Schema DB_SOCIAL_PORTAL
--
-- Social portal database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DB_SOCIAL_PORTAL` DEFAULT CHARACTER SET utf8 ;
USE `DB_SOCIAL_PORTAL` ;

-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`USER_ROLE_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`USER_ROLE_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`USER_ROLE_T` (
  `USER_ROLE_ID` INT NOT NULL AUTO_INCREMENT,
  `ROLE` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`USER_ROLE_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`LANGUAGE_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`LANGUAGE_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`LANGUAGE_T` (
  `LANGUAGE_ID` INT NOT NULL,
  `NAME` VARCHAR(45) NOT NULL,
  `CODE` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`LANGUAGE_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`PICTRUE_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`PICTRUE_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`PICTRUE_T` (
  `PICTRUE_ID` INT NOT NULL AUTO_INCREMENT,
  `USER_ID` INT NOT NULL,
  `DESCRIPTION` TINYTEXT NULL,
  `IMAGE` BLOB NOT NULL,
  `DATE` DATETIME NOT NULL,
  PRIMARY KEY (`PICTRUE_ID`),
  INDEX `USER_FK_idx` (`USER_ID` ASC),
  CONSTRAINT `PICTRUE_USER_FK`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_T` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`USER_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`USER_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`USER_T` (
  `USER_ID` INT NOT NULL AUTO_INCREMENT,
  `ROLE_ID` INT NOT NULL,
  `PREFERRED_LANGUAGE_ID` INT NOT NULL,
  `FIRST_NAME` VARCHAR(45) NOT NULL,
  `SECOND_NAME` VARCHAR(45) NOT NULL,
  `EMAIL` VARCHAR(256) NOT NULL,
  `PASSWORD` VARCHAR(255) NOT NULL,
  `BIRTHDAY` DATE NOT NULL,
  `LAST_TIME_ONLINE` DATETIME NULL DEFAULT NULL,
  `PHONE_NUMBER` VARCHAR(15) NULL DEFAULT NULL,
  `POSTAL_CODE` VARCHAR(5) NULL DEFAULT NULL,
  `STREET` VARCHAR(255) NULL DEFAULT NULL,
  `CITY` VARCHAR(255) NULL DEFAULT NULL,
  `PROFILE_PHOTO_ID` INT NULL,
  PRIMARY KEY (`USER_ID`),
  UNIQUE INDEX `USER_ID_UNIQUE` (`USER_ID` ASC),
  INDEX `USER_ROLE_FK_idx` (`ROLE_ID` ASC),
  INDEX `PREFERRED_LANGUAGE_FK_idx` (`PREFERRED_LANGUAGE_ID` ASC),
  INDEX `PROFILE_PHOTO_FK_idx` (`PROFILE_PHOTO_ID` ASC),
  CONSTRAINT `USER_USER_ROLE_FK`
    FOREIGN KEY (`ROLE_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_ROLE_T` (`USER_ROLE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `USER_PREFERRED_LANGUAGE_FK`
    FOREIGN KEY (`PREFERRED_LANGUAGE_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`LANGUAGE_T` (`LANGUAGE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `USER_PROFILE_PHOTO_FK`
    FOREIGN KEY (`PROFILE_PHOTO_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`PICTRUE_T` (`PICTRUE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`INVITATION_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`INVITATION_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`INVITATION_T` (
  `INVITATION_ID` INT NOT NULL AUTO_INCREMENT,
  `FROM_USER_ID` INT NOT NULL,
  `TO_USER_ID` INT NOT NULL,
  `SENDED` DATETIME NOT NULL,
  `ACCEPTED` BIT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`INVITATION_ID`),
  UNIQUE INDEX `idINVITATIONS_ID_UNIQUE` (`INVITATION_ID` ASC),
  INDEX `TO_USER_FK_idx` (`TO_USER_ID` ASC),
  INDEX `FROM_USER_FK_idx` (`FROM_USER_ID` ASC),
  CONSTRAINT `INVITATION_TO_USER_FK`
    FOREIGN KEY (`TO_USER_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_T` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `INVITATION_FROM_USER_FK`
    FOREIGN KEY (`FROM_USER_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_T` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T` (
  `TYPE_OF_NOTIFICATION_ID` INT NOT NULL AUTO_INCREMENT,
  `TYPE` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`TYPE_OF_NOTIFICATION_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`NOTIFICATION_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`NOTIFICATION_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`NOTIFICATION_T` (
  `NOTIFICATION_ID` INT NOT NULL AUTO_INCREMENT,
  `FOR_USER_ID` INT NOT NULL,
  `TYPE_OF_NOTIFICATION_ID` INT NOT NULL,
  `REFERENCE_ID` INT NOT NULL,
  PRIMARY KEY (`NOTIFICATION_ID`),
  INDEX `REFERERENCE_TO_INVITATION_FK_idx` (`REFERENCE_ID` ASC),
  INDEX `TYPE_OF_NOTIFICATION_FK_idx` (`TYPE_OF_NOTIFICATION_ID` ASC),
  CONSTRAINT `NOTIFICATION_TYPE_OF_NOTIFICATION_FK`
    FOREIGN KEY (`TYPE_OF_NOTIFICATION_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T` (`TYPE_OF_NOTIFICATION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `NOTIFICATION_REFERERENCE_TO_INVITATION_FK`
    FOREIGN KEY (`REFERENCE_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`INVITATION_T` (`INVITATION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`POST_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`POST_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`POST_T` (
  `POST_ID` INT NOT NULL AUTO_INCREMENT,
  `TEXT` TEXT NOT NULL,
  `USER_ID` INT NOT NULL,
  `DATE` DATETIME NOT NULL,
  PRIMARY KEY (`POST_ID`),
  INDEX `AUTHOR_USER_FK_idx` (`USER_ID` ASC),
  CONSTRAINT `POST_USER_FK`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_T` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`TYPE_OF_COMMENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`TYPE_OF_COMMENT` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`TYPE_OF_COMMENT` (
  `TYPE_OF_COMMENT_ID` INT NOT NULL AUTO_INCREMENT,
  `TYPE` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`TYPE_OF_COMMENT_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`COMMENT_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`COMMENT_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`COMMENT_T` (
  `COMMENT_ID` INT NOT NULL AUTO_INCREMENT,
  `COMMENT` TINYTEXT NOT NULL,
  `USER_ID` INT NOT NULL,
  `REFERENCE_ID` INT NOT NULL,
  `TYPE_OF_COMMENT_ID` INT NULL,
  PRIMARY KEY (`COMMENT_ID`),
  INDEX `USER_FK_idx` (`USER_ID` ASC),
  INDEX `POST_FK_idx` (`REFERENCE_ID` ASC),
  INDEX `TYPE_OF_COMMENT_ID_idx` (`TYPE_OF_COMMENT_ID` ASC),
  CONSTRAINT `COMMENT_USER_FK`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_T` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `COMMENT_REF_POST_FK`
    FOREIGN KEY (`REFERENCE_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`POST_T` (`POST_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `COMMENT_TYPE_OF_COMMENT_ID`
    FOREIGN KEY (`TYPE_OF_COMMENT_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`TYPE_OF_COMMENT` (`TYPE_OF_COMMENT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `COMMENT_REF_PICTRUE_FK`
    FOREIGN KEY (`REFERENCE_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`PICTRUE_T` (`PICTRUE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_SOCIAL_PORTAL`.`MESSAGE_T`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB_SOCIAL_PORTAL`.`MESSAGE_T` ;

CREATE TABLE IF NOT EXISTS `DB_SOCIAL_PORTAL`.`MESSAGE_T` (
  `MESSAGE_ID` INT NOT NULL AUTO_INCREMENT,
  `FROM_USER_ID` INT NOT NULL,
  `TO_USER_ID` INT NOT NULL,
  `MESSAGE` TINYTEXT NOT NULL,
  `DATE` DATETIME NOT NULL,
  PRIMARY KEY (`MESSAGE_ID`),
  INDEX `FROM_USER_FK_idx` (`FROM_USER_ID` ASC),
  INDEX `TO_USER_FK_idx` (`TO_USER_ID` ASC),
  CONSTRAINT `MESSAGE_FROM_USER_FK`
    FOREIGN KEY (`FROM_USER_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_T` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `MESSAGE_TO_USER_FK`
    FOREIGN KEY (`TO_USER_ID`)
    REFERENCES `DB_SOCIAL_PORTAL`.`USER_T` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `DB_SOCIAL_PORTAL`;

DELIMITER $$

USE `DB_SOCIAL_PORTAL`$$
DROP TRIGGER IF EXISTS `DB_SOCIAL_PORTAL`.`INVITATION_T_AFTER_INSERT` $$
USE `DB_SOCIAL_PORTAL`$$
CREATE DEFINER = CURRENT_USER TRIGGER `DB_SOCIAL_PORTAL`.`INVITATION_T_AFTER_INSERT` AFTER INSERT ON `INVITATION_T` FOR EACH ROW
BEGIN
	INSERT INTO `DB_SOCIAL_PORTAL`.`NOTIFICATION_T` (`FOR_USER_ID`, `TYPE_OF_NOTIFICATION_ID`, `REFERENCE_ID`)
    VALUES (INSERTED.TO_USER_ID, 1, INSERTED.INVITATION_ID);
END$$


USE `DB_SOCIAL_PORTAL`$$
DROP TRIGGER IF EXISTS `DB_SOCIAL_PORTAL`.`COMMENT_T_AFTER_INSERT` $$
USE `DB_SOCIAL_PORTAL`$$
CREATE DEFINER = CURRENT_USER TRIGGER `DB_SOCIAL_PORTAL`.`COMMENT_T_AFTER_INSERT` AFTER INSERT ON `COMMENT_T` FOR EACH ROW
BEGIN
	INSERT INTO `DB_SOCIAL_PORTAL`.`NOTIFICATION_T` (`FOR_USER_ID`, `TYPE_OF_NOTIFICATION_ID`, `REFERENCE_ID`)
    VALUES (INSERTED.USER_ID, 2, INSERTED.COMMENT_ID);
END$$


USE `DB_SOCIAL_PORTAL`$$
DROP TRIGGER IF EXISTS `DB_SOCIAL_PORTAL`.`MESSAGE_T_AFTER_INSERT` $$
USE `DB_SOCIAL_PORTAL`$$
CREATE DEFINER = CURRENT_USER TRIGGER `DB_SOCIAL_PORTAL`.`MESSAGE_T_AFTER_INSERT` AFTER INSERT ON `MESSAGE_T` FOR EACH ROW
BEGIN
	INSERT INTO `DB_SOCIAL_PORTAL`.`NOTIFICATION_T` (`FOR_USER_ID`, `TYPE_OF_NOTIFICATION_ID`, `REFERENCE_ID`)
    VALUES (INSERTED.TO_USER_ID, 3, INSERTED.MESSAGE_ID);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `DB_SOCIAL_PORTAL`.`USER_ROLE_T`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_SOCIAL_PORTAL`;
INSERT INTO `DB_SOCIAL_PORTAL`.`USER_ROLE_T` (`USER_ROLE_ID`, `ROLE`) VALUES (1, 'USER');
INSERT INTO `DB_SOCIAL_PORTAL`.`USER_ROLE_T` (`USER_ROLE_ID`, `ROLE`) VALUES (2, 'MODERATOR');
INSERT INTO `DB_SOCIAL_PORTAL`.`USER_ROLE_T` (`USER_ROLE_ID`, `ROLE`) VALUES (3, 'ADMINISTRATOR');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_SOCIAL_PORTAL`.`LANGUAGE_T`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_SOCIAL_PORTAL`;
INSERT INTO `DB_SOCIAL_PORTAL`.`LANGUAGE_T` (`LANGUAGE_ID`, `NAME`, `CODE`) VALUES (1, 'ENGLISH', 'EN');
INSERT INTO `DB_SOCIAL_PORTAL`.`LANGUAGE_T` (`LANGUAGE_ID`, `NAME`, `CODE`) VALUES (2, 'POLISH', 'PL');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_SOCIAL_PORTAL`;
INSERT INTO `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T` (`TYPE_OF_NOTIFICATION_ID`, `TYPE`) VALUES (1, 'INVITATION');
INSERT INTO `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T` (`TYPE_OF_NOTIFICATION_ID`, `TYPE`) VALUES (2, 'NEW_COMMENT');
INSERT INTO `DB_SOCIAL_PORTAL`.`TYPE_OF_NOTIFICATION_T` (`TYPE_OF_NOTIFICATION_ID`, `TYPE`) VALUES (3, 'NEW_MESSAGE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_SOCIAL_PORTAL`.`TYPE_OF_COMMENT`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_SOCIAL_PORTAL`;
INSERT INTO `DB_SOCIAL_PORTAL`.`TYPE_OF_COMMENT` (`TYPE_OF_COMMENT_ID`, `TYPE`) VALUES (1, 'POST');
INSERT INTO `DB_SOCIAL_PORTAL`.`TYPE_OF_COMMENT` (`TYPE_OF_COMMENT_ID`, `TYPE`) VALUES (2, 'PICTRUE');

COMMIT;

